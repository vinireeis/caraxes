services:
  db:
    image: postgres:17
    restart: always
    container_name: caraxes-postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - caraxes_api_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: caraxes-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_STRING_CONNECTION: ${POSTGRES_STRING_CONNECTION}
    ports:
      - "9000:9000"
    command: >
      sh -c "
      until pg_isready -h db -p 5432; do sleep 2; done &&
      if [ ! -f /src/migrations/versions/*.py ]; then
          alembic revision --autogenerate -m 'create tables'
      fi &&
      alembic upgrade head &&
      python3 main.py"

    networks:
      - caraxes_api_network

networks:
  caraxes_api_network:

volumes:
  postgres_data: